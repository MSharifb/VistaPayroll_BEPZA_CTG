@model PGM.Web.Areas.PGM.Models.Attendance.AttendanceViewModel
@using PGM.Web.Helpers

<script src="@Url.Content("~/Scripts/listEditor.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/PGM/PopupEmployeeList.js")" type="text/javascript"></script>

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.ZoneIdDuringAttendance)

<fieldset>
    <div class="row">
        <span class="label">
            @Html.HiddenFor(model => model.strMode)
            @Html.LabelFor(model => model.AttYear)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.DropDownListFor(model => model.AttYear, Model.YearList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required" })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.AttMonth)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.DropDownListFor(model => model.AttMonth, Model.MonthList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required" })
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(m => m.EmployeeId, new { @class = "label-required" })
        </span>
        <span class="field" style="width: 50%;">
            @Html.DropDownListFor(model => model.EmployeeId, Model.EmployeeList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required select-single" })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.EmployeeDesignation)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.EmployeeDesignation, new { @readonly = "readonly", @class = "read-only" })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.AccountNo)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.AccountNo, new { @readonly = "readonly", @class = "read-only" })
        </span>
    </div>

</fieldset>

<fieldset>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.CalenderDays)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.CalenderDays, new { @readonly = "readonly", @class = "read-only" })
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>

    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.AttFromDate)
        </span>
        <span class="field">
            @Html.EditorFor(model => model.AttFromDate)
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.AttToDate)
        </span>
        <span class="field">
            @Html.EditorFor(model => model.AttToDate)
        </span>

    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.TotalPresent)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.TotalPresent)
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.TotalCasualLeave)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.TotalCasualLeave)
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.TotalEarnedLeave)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.TotalEarnedLeave)
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.TotalOthersLeave)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.TotalOthersLeave)
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.TotalAttendance)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.TotalAttendance)
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.Remark)
        </span>
        <span class="field">
            @Html.TextAreaFor(model => model.Remark)
        </span>
    </div>

</fieldset>

<div class="clear">
</div>

<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white; padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>

<script type="text/javascript">
    $(function () {
        GetMonthDaysAndDate();
    });


    $("select#EmployeeId").change(function () {
        var url = '@Url.Action("GetEmployeeInfo", "PGMCommon")' + '?employeeId=' + $(this).val();
        $.get(url,
            function (data) {
                if (data.Success) {
                    $("#EmployeeDesignation").val(data.EmployeeDesignation);
                    $("#AccountNo").val(data.AccountNumber);
                } else {
                    $("#message").html('Unable to load employee data').css('color', 'red');
                }
            });
    });

    $("#AttYear").live('change',
        function () {
            GetMonthDaysAndDate();
        });

    $("#AttMonth").live('change',
        function () {
            GetMonthDaysAndDate();
        });


    function GetMonthDaysAndDate() {

        var year = $('#AttYear :selected').val();
        var month = $('#AttMonth :selected').val();
        if (year != null || year != "" || month != null || month != "") {

            var url = '@Url.Action("GetMonthDaysAndDate", "Attendance")' + '?year=' + year + '&month=' + month;

            $.get(url,
                function (data) {
                    $('#CalenderDays').val(data.Days);
                    var firstDate = moment(data.FirstDate).format('YYYY-MM-DD');
                    $('#AttFromDate').val(firstDate);
                    var lastDate = moment(data.LastDate).format('YYYY-MM-DD');
                    $('#AttToDate').val(lastDate);
                });
        }
    }
</script>