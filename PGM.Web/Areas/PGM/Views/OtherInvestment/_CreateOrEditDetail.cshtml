@model PGM.Web.Areas.PGM.Models.TaxOtherInvestment.TaxOtherInvestmentDetailViewModel

@{
    ViewBag.Title = "Detail";
    Layout = "~/Areas/PGM/Views/Shared/_Layout.cshtml";
}
<fieldset>
    @using (Html.BeginForm(Model.strMode, "OtherInvestment", FormMethod.Post, new { id = "frm", @encType = "multipart/form-data" }))
    {
        <div class="GroupBox" id="message">
            @if (Model != null && !string.IsNullOrEmpty(Model.ErrMsg))
            {
                <div class="@Model.errClass">
                    @Model.ErrMsg
                </div>
            }
        </div>
        <div class="GroupBox">
            <legend>Tax On Other Investment Details</legend>

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.strMode)
            @Html.HiddenFor(model => model.EditAddNew)

            <div class="row">
                <span class="label">
                    @Html.HiddenFor(model => model.EntityId)
                    @Html.LabelFor(model => model.IncomeYear)
                </span>
                <span class="field">
                    @Html.TextBoxFor(m => m.IncomeYear, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.AssessmentYear)
                </span>
                <span class="field">
                    @Html.TextBoxFor(m => m.AssessmentYear, new { @class = "read-only", @readonly = true })
                </span>
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EmpId)
                </span>
                <span class="field">
                    @Html.HiddenFor(model => model.EmployeeId)
                    @Html.TextBoxFor(model => model.EmpId, new { @class = "read-only", @readonly = true })
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.EmployeeName)
                </span>
                <span class="field">
                    @Html.TextBoxFor(m => m.EmployeeName, new { @class = "read-only", @readonly = true })
                </span>
            </div>
           
        </div>
        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.InvestmentTypeId)
                    <label class="required-field">*</label>
                </span>
                <span class="field">
                    @Html.DropDownListFor(m => m.InvestmentTypeId, Model.InvestmentTypeList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required" }) 
                    <input id="btnNewType" class="button button-a-soft" type="button" value="Add new Type" style="margin-left:15%" onclick="GoToAddType()" />
                </span>
                @{
                    // TODO: Implement and fix investment Type setup scope (using modal.>> See Ajax callback for this button event).
                }
            </div>
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.EntityEntryDate)
                </span>
                <span class="field">
                    @Html.EditorFor(model => model.EntityEntryDate)
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.EntityAmount)
                    <label class="required-field">*</label>
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.EntityAmount)
                </span>
            </div>
            <div class="row">
                <span class="label" style="width:20%">
                    @Html.LabelFor(model => model.EntityDescription)
                </span>
                <span class="field" style="width:80%">
                    @Html.TextAreaFor(model => model.EntityDescription, new { @style="width:100%"})
                </span>
            </div>
            <div class="attachment-area">
                <div class="row">
                    <span class="label">@Html.LabelFor(m => m.Attachment)</span>
                    <span class="field">
                        @Html.HiddenFor(model => model.Attachment)

                        @Html.TextBoxFor(model => model.File, new { type = "file" })
                    </span>
                    <span class="button">
                        <div class="fixedAddButton" style="align-content:flex-start;">
                            <input id="btnUpload" type="button" value="Upload" />
                        </div>
                    </span>
                </div>
            </div>
            <div class="row" align="center">
                <div style="width: 70%">
                    <div class="clear"></div>
                    @*<div class="button-crude fixedAddButton" style="text-align: right;">
                            <input id="btnAdd" type="button" value="Add" />
                        </div>*@

                    <div class="clear">
                    </div>
                    <table id="grid" class="contenttable">
                        <thead>
                            <tr>
                                <th>
                                    Document Name
                                </th>
                                <th>
                                    Document Upload Date
                                </th>
                                <th>
                                    Delete
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{if (Model.OtherInvestmentDocumentList.Count() > 0){ Html.RenderPartial("_Details", Model); } }
                    </table>
                </div>
                <div class="clear" style="height: 10px">
                </div>
            </div>
        </div>
        <div class="clear"></div>
        <div class="button-crude">
            @if ((new PGM.Web.Utility.AppConstant()).IsAddAssigned)
            {
                if(Model.strMode == "Create")
                {
                    <input type="submit" value="Save" id="btnSave" name="btnSubmit" style="margin-right: 8px;" />
                }
                else
                {
                    <input type="submit" value="Update" id="btnSave" name="btnSubmit" style="margin-right: 8px;" />
                }
            }
        </div>
    }
</fieldset>
<div id="divInvestmentType">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white; padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>
<script type="text/javascript">
    $('#btnClear').live('click', function () {
        document.getElementById('frm').reset();
        $('#btnAdd').show();
    })

</script>

<script type="text/javascript">

    $(document).ready(function () {
        $("#divInvestmentType").dialog({ autoOpen: false, modal: true, height: 400, width: 800, title: 'Investment Type', beforeclose: function (event, ui) { Closing(); } });
        showErrMsg();
    });

    @*$('#btnNewType').live('click', function () {
        var url = '@Url.Action("CreateInvestmentType", "OtherInvestment")';
        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'text',
            timeout: 5000,
            error: function () {
                alert('System is unable to load data please try again.');
            },
            success: function (result) {
                $('#divInvestmentType').html(result);
            }
        });

        $("#divInvestmentType").dialog('open');
        return false;
    });*@

    function GoToAddType() {

        $("#divInvestmentType").empty();

        var url = '@Url.Action("CreateInvestmentType", "OtherInvestment")';
        $.post(url, function (obj) {
            $('#divInvestmentType').html(obj);
        });

        $("#divInvestmentType").dialog('open');

        return false;
    }

    function setData(id) {
        $("#divInvestmentType").dialog('close');
    }

    function Closing() {

    }

    $('#btnUpload').live('click', function (e) {
        e.preventDefault();
        var url = '@Url.Action("AddAttachment", "OtherInvestment")';

        //another way
        var xhr = new XMLHttpRequest();
        var fd = new FormData();
        fd.append("file", document.getElementById('File').files[0]);

        xhr.open("POST", url, true);
        xhr.send(fd);
        xhr.addEventListener("load", function (event) {
            //alert(event.target.response);
            //  $("#grid tbody").html(event.target.response);
            if (event.target.response != 'Invalid') {
                $("#grid tbody").append(event.target.response);

            }

        }, false);
    });

    function RemoveDb(el, id, detailId, url) {

        if (confirm("Do you want to delete this document?")) {
            if (id == 0 || id == undefined) {
                $(el).parent().parent().remove();
            }
            else {
                var compositeId = id + ',' + detailId;
                $.ajax({
                    url: url,
                    type: 'POST',
                    dataType: 'json',
                    data: JSON.stringify({ Id: compositeId }),
                    contentType: "application/json; charset=utf-8",
                    error: function () {
                        $("#message").html("<div class=\"validation-summary-errors\" data-valmsg-summary=\"true\"> <span> System Error!</span>  </div> ");
                    },
                    success: function (result) {
                        var errMsg = result.Message;
                        var errg = result.Success;
                        if (errg) {
                            $("#message").html('<b style=\"color:Green\">' + errMsg + '</b>');
                            $(el).parent().parent().remove();
                        }
                        else {
                            $("#message").html('<b style=\"color:red\">' + errMsg + '</b>');
                        }
                    }
                });
            }
        }// end confirm if
    }




</script>


<style type="text/css">
    .attachment-area .row a {
        padding: 7px 20px;
        border: 1px solid #2980b9;
        background: #2980b9;
        border-radius: 4px;
        color: #FFFFFF;
        font-weight: bold;
        text-decoration: none;
    }

        .attachment-area .row a:hover {
            background: #3498db;
        }
</style>

