@model PGM.Web.Areas.PGM.Models.ChargeAllowanceRule.ChargeAllowanceRuleModel
@using PGM.Web.Helpers
@{
    ViewBag.Title = "CreateOrEdit";
    Layout = "~/Areas/PGM/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm(Model.Mode, "ChargeAllowanceRule", FormMethod.Post, new { id = "frm", @encType = "multipart/form-data" }))
{
    <fieldset>
        <div class="GroupBox" style="min-height: 15px" id="message">
            @Html.ValidationSummary(false, PGM.Web.Utility.Common.ValidationSummaryHead)

        </div>

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.HasData)
        @Html.HiddenFor(model => model.Mode)

        <div class="GroupBox">
            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.SalaryHeadId)
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.SalaryHeadId, Model.SalaryHeadList, @String.Format("{0}", Content.DDLOptionalLabel()))
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.BaseOn)
                    <label style='color: red'></label>
                </span>
                <span class="field">
                    @Html.DropDownListFor(model => model.BaseOn, Model.BaseOnList, @String.Format("{0}", Content.DDLOptionalLabel()))
                </span>
            </div>

            <div class="row">
                <span class="label">
                    @Html.LabelFor(model => model.ChargeAllowancePercent)
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.ChargeAllowancePercent)
                    @Html.Label("lblPerc", "%")
                </span>
                <span class="label-right">
                    @Html.LabelFor(model => model.MaxChargeAllowance)
                    <label style='color: red'>*</label>
                </span>
                <span class="field">
                    @Html.TextBoxFor(model => model.MaxChargeAllowance)
                </span>
            </div>
            <div class="clear">
            </div>
        </div>

        <div class="GroupBox">
            <div class="button-crude">
                @if ((new PGM.Web.Utility.AppConstant()).IsAddAssigned)
                {
                    <input type="submit" value="Save" id="btnSave" name="btnSubmit" style="margin-right: 8px;" />
                }
                @if ((new PGM.Web.Utility.AppConstant()).IsEditAssigned)
                {
                    <input type="submit" value="Update" id="btnUpdate" name="btnSubmit" />
                }
                @if ((new PGM.Web.Utility.AppConstant()).IsDeleteAssigned)
                {
                    <input type="submit" value="Delete" id="btnDelete" name="btnSubmit" />
                }
                <input type="button" value="Clear" id="btnClear" name="btnSubmit" />
            </div>
        </div>
    </fieldset>
}
<script type="text/javascript">

    $(function () {

        if ('@Model.Message' != "") {
            if ('@Model.IsSuccessful' == 'True') {
                $('#message').html("<b style='color:Green'>" + '@Model.Message' + "</b>");
            }
            else {
                $('#message').html("<b style='color:Red'>" + '@Model.Message' + "</b>");
            }
        }

        $("#btnDelete").live("click", function () {
            $('#delete-dialog').dialog('open');
            return false; // prevents the default behaviour
        });

        $('#delete-dialog').dialog({
            autoOpen: false, width: 400, resizable: false, modal: true, //Dialog options
            overlay: {
                backgroundColor: '#000',
                opacity: 0.5
            },
            buttons: {
                "Yes": function () {
                    var btnSubmit = 'Delete';
                    var url = '@Url.Action("Delete", "ChargeAllowanceRule", new { id = Model.Id })';
                    $.post(url, function (obj) {
                        //Post to action
                        if (obj.Success) {
                            var indexUrl = '@Url.Action("Index", "ChargeAllowanceRule")' + '?message=' + obj.Message + '&IsSuccessful=' + obj.Success;
                            indexUrl = indexUrl.replace(/_msg_/, obj.Message);
                            indexUrl = indexUrl.replace(/_isSuccess_/, obj.Success);
                            window.document.location = indexUrl;
                        }
                        else {
                            $("#message").html("<b>" + obj.Message + "</b>").css("color", "red");
                        }
                    });
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });

        $("#btnClear").live("click", function () {
            var url = '@Url.Action("Index")';
            window.location.href = url;
        });

        if ('@Model.HasData' == 'True') {
            $('#btnSave').hide();
            $('#btnClear').hide();
            $('#btnUpdate').show();
            $('#btnDelete').show();
        }
        else {
            $('#btnUpdate').hide();
            $('#btnDelete').hide();
            $('#btnSave').show();
            $('#btnClear').show();
        }
    });

</script>
