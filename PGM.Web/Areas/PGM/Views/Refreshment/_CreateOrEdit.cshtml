@model PGM.Web.Areas.PGM.Models.Refreshment.RefreshmentViewModel
@using PGM.Web.Helpers

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.strMode)
@Html.HiddenFor(model => model.ZoneIdDuringRefreshment)

<fieldset>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.RYear)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.DropDownListFor(model => model.RYear, Model.YearList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required" })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.RMonth)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.DropDownListFor(model => model.RMonth, Model.MonthList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required" })
        </span>
    </div>
    
    <div class="row">
        <span class="label">
            @Html.LabelFor(m => m.EmployeeId, new { @class = "label-required" })
        </span>
        <span class="field" style="width: 50%;">
            @Html.DropDownListFor(model => model.EmployeeId, Model.EmployeeList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required select-single" })
        </span>
    </div>
    
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.Designation)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.Designation, new { @readonly = "readonly", @class = "read-only" })
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.AccountNo)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.AccountNo, new { @readonly = "readonly", @class = "read-only" })
        </span>
    </div>

</fieldset>

<fieldset>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.PerDayAmount)
            <label class="required-field"> *</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.PerDayAmount)
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
      
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.TotalDays)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.TotalDays)
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.RevenueStamp)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.RevenueStamp)
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.NetPayable)
            <label class="required-field">*</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.NetPayable, new { @readonly = "readonly", @class = "read-only" })
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
    </div>

</fieldset>

<div class="clear">
</div>

<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="99%" height="98%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>

<script type="text/javascript">

    $("select#EmployeeId").change(function () {

        var url = '@Url.Action("GetEmployeeInfo", "PGMCommon")' + '?employeeId=' + $(this).val();

        $.get(url,
            function (data) {
                if (data.Success) {
                    $("#Designation").val(data.EmployeeDesignation);
                    $("#AccountNo").val(data.AccountNumber);
                } else {
                    $("#message").html('Unable to load employee data').css('color', 'red');
                }
            });
    });

    $("#PerDayAmount").live('change', function () {
        CalculateAmount();
    });

    $("#TotalDays").live('change', function () {
        CalculateAmount();
    });

    $("#RevenueStamp").live('change', function () {
        CalculateAmount();
    });

    function CalculateAmount() {

        var perDayAmount = parseFloat($("#PerDayAmount").val());
        perDayAmount = (isNaN(perDayAmount)) ? 0 : perDayAmount;

        var totalDays = parseFloat($("#TotalDays").val());
        totalDays = (isNaN(totalDays)) ? 0 : totalDays;

        var RevenueStamp = parseFloat($("#RevenueStamp").val());
        RevenueStamp = (isNaN(RevenueStamp)) ? 0 : RevenueStamp;

        var totalAmount = (perDayAmount * totalDays);

        var NetPayable = (totalAmount - RevenueStamp);

        if (NetPayable < 0) NetPayable = 0;

        $("#NetPayable").val(Math.round(NetPayable));
    }

    function VoucherPosting() {
        var year = $("#RYear :selected").val();
        var month = $("#RMonth :selected").val();
        var employeeId = $('#EmployeeId').val();

        if (year == "" && month == "" && employeeId > 0) {
            alert('Before prepare voucher, please process salary for this month.');
            return false;
        }
        var url = '@Url.Action("VoucherPosting", "Refreshment")?year=' + year + '&month=' + month + '&EmployeeId=' + employeeId;
        $.ajax({
            url: url,
            type: 'POST',
            success: function (result) {
                if (result.redirectUrl != '') {
                    window.location.href = result.redirectUrl;
                }
            },
            error: function () {
                alert('System is unable to load data please try again.');
            }
        });
    }

</script>