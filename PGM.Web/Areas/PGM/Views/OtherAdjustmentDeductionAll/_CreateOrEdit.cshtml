@model PGM.Web.Areas.PGM.Models.OtherAdjustmentDeductionAll.OtherAdjustmentDeductAll
@using PGM.Web.Helpers

<div class="GroupBox">
    @if (Model.Mode == "Add")
    {
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.FromMonth)
                <label style='color: red'>*</label>
            </span>
            <span class="field">
                @Html.DropDownListFor(m => m.FromYear, Model.SalaryYearList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @style = "width: 127px;" })
                @Html.DropDownListFor(m => m.FromMonth, Model.SalaryMonthList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @style = "width: 128px;" })
            </span>
            <span class="label-right">
                &nbsp;
            </span>
            <span class="field">
                &nbsp;
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.ToMonth)
                <label style='color: red'>*</label>
            </span>
            <span class="field">
                @Html.DropDownListFor(m => m.ToYear, Model.SalaryYearList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @style = "width: 127px;" })
                @Html.DropDownListFor(m => m.ToMonth, Model.SalaryMonthList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @style = "width: 128px;" })
            </span>
            <span class="label-right">
                &nbsp;
            </span>
            <span class="field">
                &nbsp;
            </span>
        </div>
    }
    else
    {
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.SalaryYear)
                <label style='color: red'>*</label>
            </span>
            <span class="field">
                @Html.DropDownListFor(m => m.SalaryYear, Model.SalaryYearList, @String.Format("{0}", Content.DDLOptionalLabel()))
            </span>
            <span class="label-right">
                @Html.LabelFor(model => model.SalaryMonth)
                <label style='color: red'>*</label>
            </span>
            <span class="field">
                @Html.DropDownListFor(m => m.SalaryMonth, Model.SalaryMonthList, @String.Format("{0}", Content.DDLOptionalLabel()))
            </span>
        </div>
    }
</div>

<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.HeadType)
            @Html.HiddenFor(model => model.SelectedType, new { id = "hfSelectedType" })
            <label class="required-field">*</label>
        </span>
        <span class="field" style="width: 300px;">
            @Html.RadioButtonFor(model => model.HeadType, "Addition", new { id = "Addition", @class = "doDisabled" })
            @Html.Label(" Addition")
            @Html.RadioButtonFor(model => model.HeadType, "Deduction", new { id = "Deduction", @class = "doDisabled" })
            @Html.Label(" Deduction")
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.SalaryHead)
            <label style='color: red'>*</label>
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.SalaryHeadId, Model.SalaryHeadList, @String.Format("{0}", Content.DDLOptionalLabel()))
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
    </div>
</div>

<div class="GroupBox">

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.StaffCategoryId)
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.StaffCategoryId, Model.StaffCategoryList, @String.Format("{0}", Content.DDLOptionalAllLabel()))
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.DepartmentId)
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.DepartmentId, Model.DepartmentList, @String.Format("{0}", Content.DDLOptionalAllLabel()))
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.DesignationId)
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.DesignationId, Model.DesignationList, @String.Format("{0}", Content.DDLOptionalAllLabel()))
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.EmploymentTypeId)
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.EmploymentTypeId, Model.EmploymentTypeList, @String.Format("{0}", Content.DDLOptionalAllLabel()))
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.FromJobGradeId)
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.FromJobGradeId, Model.JobGradeList, @String.Format("{0}", Content.DDLOptionalAllLabel()))
        </span>
        <span class="label-right">
            @Html.LabelFor(model => model.ToJobGradeId)
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.ToJobGradeId, Model.JobGradeList, @String.Format("{0}", Content.DDLOptionalAllLabel()))
        </span>
    </div>

</div>

<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.AmountType)
            <label style='color: red'>*</label>
        </span>
        <span class="field">
            @Html.DropDownListFor(m => m.AmountType, Model.AmountTypeList, @String.Format("{0}", Content.DDLOptionalLabel()))
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.Amount, new { @id = "lblAmount" })
            <label style='color: red'>*</label>
        </span>
        <span class="field">
            @Html.TextBoxFor(m => m.Amount, new { @maxLength = "8", @style = "text-align:right;" })
            @Html.Label("lblBasicAmount", " ")
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
    </div>

    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.Remarks)
        </span>
        <span class="field">
            @Html.TextAreaFor(m => m.Remarks, new { @style = "width:300px" })
        </span>
    </div>
    <div class="row">
        <span class="label">
            &nbsp;
        </span>
        <span class="field">
            @Html.CheckBoxFor(m => m.IsOverrideStructureAmount) @Html.LabelFor(model => model.IsOverrideStructureAmount)
        </span>
        <span class="label-right">
            &nbsp;
        </span>
        <span class="field">
            &nbsp;
        </span>
    </div>
    <div class="clear">
    </div>
</div>

<script type="text/javascript">

    $(function () {
        showErrMsg();
        
        ChangeAmountLabel();

        $('#AmountType').live('change', function (index) {
            ChangeAmountLabel();
        });

    });

    function ChangeAmountLabel() {
        $('#lblAmount').html('Amount');

        if ($('#AmountType').val() == 'Fixed')
            $("label[for*='lblBasicAmount']").html("");
        else if ($('#AmountType').val() == 'Percent')
            $("label[for*='lblBasicAmount']").html(" % of Basic Salary");
        else if ($('#AmountType').val() == 'Day_Wise') {
            $("label[for*='lblBasicAmount']").html(" day(s) of Basic Salary");
            $('#lblAmount').html('Days');
        }
    }

    function showErrMsg() {
        if ('@Model.IsError' == "1") {
            var msg = '@Model.ErrMsg'.replace(/#/gi, "<br/>* ");
            $("#message").html("<b>" + msg + "</b>").css("color", "red");
        }
        else {
            var msg = '@Model.ErrMsg'.replace(/#/gi, "<br/>* ");
            $("#message").html("<b>" + msg + "</b>").css("color", "green");
        }
    }
</script>

<script type="text/javascript">

    $("#Amount").keydown(function (event) {
        //alert(advance);
        // Allow: backspace, delete, tab, escape, and enter
        if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
            // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
            // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        else {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                event.preventDefault();
            }
        }
    });
</script>

<script type="text/javascript">
    $(function () {

        var checkedVal = $("input[type='radio']:checked").val();
        var hfValue = $('#hfSelectedType').val();
        if (hfValue == '') {
            $('#hfSelectedType').val(checkedVal);
        }

        $("input[type='radio']:checked").live("change", function () {

            AdjustDeductType = $(this).val();
            $('#hfSelectedType').val(AdjustDeductType);
            $.ajax({
                url: "@Url.Action("SalaryHeadList", "OtherAdjustmentDeductionAll")",
                data: { AdjustDeductType: AdjustDeductType },
                dataType: "json",
                type: "POST",
                timeOut: 15000,
                error: function () {
                    alert("System is unable to load data, please try again.");
                },
                success: function (data) {
                    $("#SalaryHeadId").empty();
                    var items = "<option value=\"" + "" + "\">" + "[Select One]" + "</option>";
                    $("#SalaryHeadId").html(items);

                    $.each(data, function (i, item) {
                        items += "<option value=\"" + item.Value + "\">" + item.Text + "</option>";
                    });

                    $("#SalaryHeadId").html(items);
                }

            });
            return false;
        });
    });

</script>

