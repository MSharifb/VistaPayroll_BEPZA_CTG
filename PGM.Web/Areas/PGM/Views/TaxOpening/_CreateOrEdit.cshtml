@model PGM.Web.Areas.PGM.Models.TaxOpening.TaxOpeningModel
@using PGM.Web.Helpers
@using PGM.Web.Utility
<script src="@Url.Content("~/Scripts/listEditor.js")" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {
        //Calculate Total during Page Load
        caltotal();

        //Calculate the Total when user change the Income Amount
        $(".grandtotal").change(function (event) {
            var gTotal = 0;
            $(".grandtotal").each(function () {
                gTotal = gTotal + parseFloat($(this).val())
            });
            $('#totalAmount').val(gTotal);
        });

        $("#TaxDeducted").keydown(function (event) {
            //alert(advance);
            // Allow: backspace, delete, tab, escape, and enter
            if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 || event.keyCode == 13 ||
                // Allow: Ctrl+A
                (event.keyCode == 65 && event.ctrlKey === true) ||
                // Allow: home, end, left, right
                (event.keyCode >= 35 && event.keyCode <= 39)) {
                // let it happen, don't do anything
                return;
            }
            else {
                // Ensure that it is a number and stop the keypress
                if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                    event.preventDefault();
                }
            }
        });

    });          //End Document Ready



    function caltotal() {
        var gTotal = 0;
        $(".grandtotal").each(function () {
            gTotal = gTotal + parseFloat($(this).val())
        });
        $('#totalAmount').val(gTotal);
    }

    function showErrMsg() {
        if ('@Model.IsError' == "1") {
            var msg = '@Model.ErrMsg'.replace(/#/gi, "<br/>* ");
            $("#message").html("<b>" + msg + "</b>").css("color", "red");
        }
    }


</script>

<div class="GroupBox">
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.IncomeYear)
            <label style='color: red'>
                *
            </label>
        </span><span class="field">
            @Html.DropDownListFor(m => m.IncomeYear, Model.IncomeYearList, @String.Format("{0}", Content.DDLOptionalLabel()))
        </span><span class="label-right">
            @Html.LabelFor(model => model.AssessmentYear)
            <label style='color: red'>
                *
            </label>
        </span><span class="field">
            @Html.EditorFor(model => model.AssessmentYear)
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.FromDate)
            <label style='color: red'>
                *
            </label>
        </span><span class="field">
            @Html.EditorFor(model => model.FromDate)
        </span><span class="label-right">
            @Html.LabelFor(model => model.ToDate)
            <label style='color: red'>
                *
            </label>
        </span><span class="field">
            @Html.EditorFor(model => model.ToDate)
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(m => m.EmployeeId, new { @class = "label-required" })
        </span>
        <span class="field" style="width: 50%;">
            @Html.DropDownListFor(model => model.EmployeeId, Model.EmployeeList, @String.Format("{0}", Content.DDLOptionalLabel()), new { @class = "required select-single" })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.EmployeeDesignation)
        </span>
        <span class="field">
            @Html.TextBoxFor(model => model.EmployeeDesignation, new { @readonly = "readonly", @class = "read-only" })
        </span>
    </div>
    <div class="row">
        <span class="label">
            @Html.LabelFor(model => model.TaxDeducted)
            <label style='color: red'>
                *
            </label>
        </span><span class="field">
            @Html.TextBoxFor(model => model.TaxDeducted, new { @maxlength="8"})
        </span>
    </div>
</div>
<div class="GroupBox">
    <div class="row" align="center">
        <div style="width: 60%">
            <table id="grid" class="contenttable" width="95%">
                <tr>
                    <th width="75%" align="center">
                        Income Head
                        <label style='color: red; font-weight: normal;'>
                            *
                        </label>
                    </th>
                    <th width="25%" align="center">
                        Income Amount
                        <label style='color: red; font-weight: normal;'>
                            *
                        </label>
                    </th>
                </tr>
                <tbody>
                    @if (Model != null && Model.TaxOpeningDetailList != null)
                {
                    foreach (var x in Model.TaxOpeningDetailList)
                    {
                    @Html.Partial("_Detail", x);
                    }
                }
                </tbody>
                <tfoot>
                    <tr>
                        <td>
                            Total:
                        </td>
                        <td>
                            <input id="totalAmount" class="read-only" style="text-align:right;" type="text" value="@Model.TotalAmount" readonly />
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<div id="divEmpList">
    <iframe id="styleAdvance" src="" width="100%" height="100%" style="border: 0px solid white;
        padding-right: 0px;">
        <p>
            Your browser does not support iframes.
        </p>
    </iframe>
</div>


<script type="text/javascript">


    $('#IncomeYear').live('change', function () {
        var incomeYear = $(this).val();
        var len = 0;

        $('#AssessmentYear').val("");
        incomeYear = incomeYear.split('-');

        $('#FromDate').val(incomeYear[0] + '-07-01');
        if (incomeYear[0].length == 4) {
            $('#AssessmentYear').val((parseInt(incomeYear[0]) + 1) + '-' + (parseInt(incomeYear[1]) + 1));
        }
    });

    $("select#EmployeeId").change(function () {
        var url = '@Url.Action("GetEmployeeInfo", "PGMCommon")' + '?employeeId=' + $(this).val();
        $.get(url,
            function (data) {
                if (data.Success) {
                    $("#EmployeeDesignation").val(data.EmployeeDesignation);
                } else {
                    $("#message").html('Unable to load employee data').css('color', 'red');
                }
            });
    });

</script>