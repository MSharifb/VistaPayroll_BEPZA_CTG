<script type="text/javascript">

    $(function () {

        $("a.deleteItem").live("click", function () {
            deleteLinkObj = $(this);  //for future use
            $('#delete-dialog').dialog('open');
            return false; // prevents the default behaviour
        });
        $('#delete-dialog').dialog({
            autoOpen: false, width: 320, resizable: false, modal: true, //Dialog options
            overlay: {
                backgroundColor: '#000',
                opacity: 0.5
            },
            buttons: {
                "Yes": function () {

                    $.post(deleteLinkObj[0].href, function (obj) {  //Post to action

                        if (obj.Success) {
                            $("#message").html("<b>" + obj.Message + "</b>").css("color", "Green");
                            $('#sButton').trigger('click');
                        }
                        else {
                            $("#message").html("<b>" + obj.Message + "</b>").css("color", "red");
                        }
                    });
                    $(this).dialog("close");
                },
                "No": function () {
                    $(this).dialog("close");
                }
            }
        });
    });

</script>

<script type="text/javascript">

    function handleDeleteSuccess() {
    }

    function handleDeleteFailure() {
        $("#message").html('There is an Ajax call back error!');
    }

    function JsonDelete_OnComplete(context) {
        var obj = eval("(" + context.responseText + ")");
        if (obj.Success) {
            $("#message").html("<b>" + obj.Message + "</b>").css("color", "Green");
            $('#sButton').trigger('click');
        }
        else {
            $("#message").html("<b>" + obj.Message + "</b>").css("color", "red");
        }
    }
     
</script>

<script type="text/javascript">
    
    $(document).ready(function () {
    
        $('#jqGrid').jqGrid({
            url: '@Url.Action("GetList")',
            datatype: 'json',
            mtype: 'POST',
            colNames: ['ID', 'Salary Scale', 'Salary Scale Name', 'Grade', 'Grade Name', 'Step', 'Step Name', 'Basic', 'Delete'],
            colModel: [
                        { name: 'ID', index: 'ID', align: 'left', search: false, hidden: true, edittype: 'text' },

                        { name: 'SalaryScaleId', index: 'SalaryScaleId', align: 'left', search: true, hidden: true, edittype: 'select', surl: '@Url.Action("GetSalaryScaleforView")' },
                        { name: 'SalaryScaleName', index: 'SalaryScaleName', align: 'left', search: false, edittype: 'text', formatter: viewformatEdiorLink },

                        { name: 'GradeId', index: 'GradeId', align: 'left', search: true, hidden: true, edittype: 'select', surl: '@Url.Action("GetGradeforView")' },
                        { name: 'GradeName', index: 'GradeName', align: 'left', search: false, edittype: 'text' },

                        { name: 'StepId', index: 'StepId', align: 'left', search: true, hidden: true, edittype: 'select', surl: '@Url.Action("GetGradeStepforView")', formatter: viewformatEdiorLink },
                        { name: 'StepName', index: 'StepName', align: 'left', search: false, edittype: 'text', formatter: 'Integer' },

                        { name: 'Amount', index: 'Amount', align: 'right', search: false, width: '50px', edittype: 'text', formatter: 'Decimal' },
                        { name: 'Delete', index: 'Delete', align: 'right', search: false, hidden: IsDeleteAssigned, sortable: false, width: '25px', edittype: 'image', formatter: deleteformateadorLink }
            ],
            autowidth: true,
            caption: "Salary Structure List",
            rowList: [20, 30, 40, 50, 100],
            pager: $('#jqGridPager'),
            rowNum: 20,
            sortname: 'ID',
            sortorder: 'asc',
            viewrecords: true,
            height: '100%',
            width: '50%'
        });
        // Pager Function
        $("#jqSearch").jqGrid('filterGrid', '#jqGrid', { gridModel: true, gridNames: true, formtype: 'horizontal', autosearch: true, enableSearch: true, enableClear: true });
    
    });

    function deleteformateadorLink(cellvalue, options, rowObject) {
       
        var url = '@Html.ActionLink(" ", "Delete", new { id = "_id_" }, new { @class = "deleteItem" })';
        url = url.replace(/_id_/, rowObject[0]);
        return url;
    }

    function viewformatEdiorLink(cellvalue, options, rowObject) {
        var url = '@Html.ActionLink("_name_", "Edit", new { id = "_id_" })';
        url = url.replace(/_name_/, cellvalue);
        url = url.replace(/_id_/, rowObject[0]);
        return url;
    }
</script>

<script type="text/javascript">
    $(function () {

        $('#sg_SalaryScaleId').live('change', function () {
            var selectedGrade = $('#sg_SalaryScaleId').val();
            var stepSelect = $('#sg_GradeId');
            stepSelect.empty();
            stepSelect.append($('<option/>', {
                value: '',
                text: '@Content.DDLOptionalLabel()'
            }));

            if (selectedGrade != null && selectedGrade != 0) {

                $.getJSON('@Url.Action("GetJobGradeBySalaryScaleId")', { salaryScaleId: selectedGrade }, function (data) {
                    $.each(data.JobGrades, function (index, step) {
                        stepSelect.append($('<option/>', {
                            value: step.Id,
                            text: step.GradeName
                        }));
                    });
                });
            }
            else {
                stepSelect.empty();
                stepSelect.append($('<option/>', {
                    value: '',
                    text: 'All'
                }));
            }
        });

        $('#sg_GradeId').live('change', function () {
            var selectedGrade = $('#sg_GradeId').val();
            var stepSelect = $('#sg_StepId');
            stepSelect.empty();
            stepSelect.append($('<option/>', {
                value: '',
                text: '@Content.DDLOptionalLabel()'
            }));

            if (selectedGrade != null && selectedGrade != 0) {

                $.getJSON('@Url.Action("GetStep")', { gradeId: selectedGrade }, function (data) {
                    $.each(data.steps, function (index, step) {
                        stepSelect.append($('<option/>', {
                            value: step.Id,
                            text: step.StepName
                        }));
                    });
                });
            }
            else {
                stepSelect.empty();
                stepSelect.append($('<option/>', {
                    value: '',
                    text: 'All'
                }));
            }
        });

    });
</script>