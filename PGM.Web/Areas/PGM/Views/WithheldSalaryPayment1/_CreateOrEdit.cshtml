@model PGM.Web.Areas.PGM.Models.WithheldSalaryPayment.WithheldSalaryPaymentViewModel
@using PGM.Web.Helpers

<script type="text/javascript">

    $(document).ready(function () {

        showErrMsg();

    });

    function showErrMsg() {
        if ('@Model.IsError' == "1") {
            var msg = '@Model.ErrMsg'.replace(/#/gi, "<br/>* ");
            $("#message").html("<b>" + msg + "</b>").css("color", "red");
            //$("#message").delay(10000).hide('slow');
        }
        else {
            var msg = '@Model.ErrMsg'.replace(/#/gi, "<br/>* ");
            $("#message").html("<b>" + msg + "</b>").css("color", "green");
            //$("#message").delay(10000).hide('slow');
        }
    }
  
</script>
<div class="GroupBox" id="message">
    @Html.ValidationSummary(false, PGM.Web.Utility.Common.ValidationSummaryHead)
</div>
@using (Html.BeginForm("Create", "WithheldSalaryPayment", FormMethod.Post, new { id = "frm" }))
{
    <div class="GroupBox">
        <div class="row">
            <span class="label">
            @Html.HiddenFor(model => model.SalaryId)
            @Html.HiddenFor(model=>model.EmployeeId)

                @Html.LabelFor(model => model.SalaryYear)
                <label class="required-field">
                    *</label>
            </span><span class="field">
             @Html.TextBoxFor(m => m.SalaryYear, new { @class = "read-only", @readonly = true })
            </span><span class="label-right">
                @Html.LabelFor(model => model.SalaryMonth)
                <label class="required-field">
                    *</label>
            </span><span class="field">
             @Html.TextBoxFor(m => m.SalaryMonth, new { @class = "read-only", @readonly = true })
            </span>
        </div>
        <div class="row">
            <span class="label">@Html.LabelFor(m => m.PaymentDate)
                <label style='color: red'>
                    *</label>
            </span><span class="field"><a>@Html.EditorFor(m => m.PaymentDate)</a> </span>

            <span class="label-right">
                @Html.LabelFor(model => model.Payable)
            </span><span class="field">
                @Html.TextBoxFor(m => m.Payable, new { @class = "read-only", @readonly = true })
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.EmployeeInitial)
            </span><span class="field">
                @Html.TextBoxFor(model => model.EmployeeInitial, new { @class = "read-only", @readonly = true })
            </span><span class="label-right">
                @Html.LabelFor(model => model.FullName)
            </span><span class="field">
                @Html.TextBoxFor(model => model.FullName, new { @class = "read-only", @readonly = true })
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.AccountNo)
            </span><span class="field">
                @Html.TextBoxFor(model => model.AccountNo, new { @class = "read-only", @readonly = true })
            </span><span class="label-right">
                @Html.LabelFor(model => model.BankNBranch)
            </span><span class="field">
                @Html.TextBoxFor(model => model.BankNBranch, new { @class = "read-only", @readonly = true })
            </span>
        </div>
        <div class="row">
            <span class="label">
                @Html.LabelFor(model => model.Remarks)
            </span><span class="field">
                @Html.TextAreaFor(model => model.Remarks, new { @style = "width:570px", @maxLength = "200" })
            </span>
        </div>
        <div class="clear">
        </div>
    </div>
       
    
}
